apply plugin: 'idea'
apply plugin: 'java-library'
apply from: "${project.rootDir}/linters/checkstyle/check.gradle"
apply from: "${project.rootDir}/linters/findbugs/check.gradle"
apply from: "${project.rootDir}/linters/pmd/check.gradle"

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

jar {
    // Bitcoinj native libraries
    exclude 'lib/x86_64/darwin/libscrypt.dylib'
    exclude 'lib/x86_64/freebsd/libscrypt.so'
    exclude 'lib/x86_64/linux/libscrypt.so'

    archiveFileName = "_lib_${project.name}.jar"
}

ext {
    // TODO this currently needs to match apollo's retrofit version. We should refactor to avoid
    // this discipline on our part. We probably need to extract it to a constant in top-level gradle
    version_retrofit = '2.5.0'
}

dependencies {
    api 'javax.validation:validation-api:1.1.0.Final'
    api 'org.hibernate:hibernate-validator:5.4.2.Final'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

    // networking
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"

    // rx
    implementation 'io.reactivex:rxjava:1.3.8'

    // bitcoin
    api 'com.github.muun:bitcoinj:0.15.4-taproot'

    // Previously bundled with bitcoinj, no longer so we manually add it
    api 'com.google.code.findbugs:jsr305:3.0.2'
    api 'net.jcip:jcip-annotations:1.0'
    api 'com.google.guava:guava:26.0-android'

    // cryptography
    api 'org.bouncycastle:bcprov-jdk15to18:1.63' // SHOULD match bitcoinJ's version
    api 'com.lambdaworks:scrypt:1.4.0'

    // money
    implementation 'org.javamoney:moneta-bp:1.1'

    // phone utils
    api 'com.googlecode.libphonenumber:libphonenumber:8.12.6'

    // java 8 and 9 backports optimized for android
    api "com.jakewharton.threetenabp:threetenabp:$global_threetenabp_version"

    // Testing dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.9.1'

    // to silence bitcoinj's slf4j
    testImplementation "org.mockito:mockito-core:$global_version_mockito"
}

// This forces our builds to be reproducible
tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}
